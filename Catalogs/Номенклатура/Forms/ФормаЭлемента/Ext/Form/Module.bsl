&НаКлиенте
Функция МожноРедактироватьОффЛайн()
	
	Если ЗначениеЗаполнено(Объект.Ссылка)=Ложь Тогда возврат Истина; КонецЕСЛИ;
	Если Объект.ДатаИзменения = Дата(1,1,1) Тогда Возврат Ложь; КонецЕСЛИ;	
	Если Объект.ДатаСинхронизации = Дата(1,1,1) Тогда Возврат Истина; КонецЕСЛИ;	
	
	Возврат Ложь;
	
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если  СокрЛП(Объект.АдресФото)<>"" Тогда
		Элементы.грпСтраницы.ОтображениеСтраниц=ОтображениеСтраницФормы.ЗакладкиСверху;
		Элементы.СделатьФото.Видимость = Ложь;
	Иначе
		Элементы.грпСтраницы.ОтображениеСтраниц=ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	Если глДоступ.ДоступНоменклатура()=Ложь Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		Возврат;
	КонецЕСЛИ;
	
	
	Если МожноРедактироватьОффЛайн()=Ложь  Тогда
		ЭтаФорма.КоманднаяПанель.Видимость=Ложь;
		Элементы.ФормаЗаписатьОнЛайн.Видимость = истина;
	КонецЕСЛИ;
	
	Если  Объект.ДатаИзменения <> Дата(1,1,1) 
		или Объект.ДатаСинхронизации <> Дата(1,1,1) Тогда
		Элементы.ДатаИзменения.Видимость = Истина;
		Элементы.ДатаСинхронизации.Видимость = истина;
	КонецЕСЛИ;
	
	Элементы.ЕдИзм.СписокВыбора.ЗагрузитьЗначения(ДанныеЕдИзм());
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеЕдИзм()
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ DISTINCT
	               |	Номенклатура.ЕдИзм КАК ЕдИзм
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура";
	ТБл =Запрос.Выполнить().Выгрузить();
	Возврат Тбл.ВыгрузитьКолонку("ЕдИзм");
	
КонецФункции



&НаСервере
Функция ЗаписатьОнЛайнНаСервере()
	
	СткСоединение = глОбщий.СткПолучитьСоединение();
	
	Соединение = Новый HTTPСоединение(
	СткСоединение.Сервер, // сервер (хост)
	СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
	СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
	СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
	, // здесь указывается прокси, если он есть
	, // таймаут в секундах, 0 или пусто - не устанавливать
	// защищенное соединение, если используется https
	);
	
	// Вставить содержимое обработчика.
	Обк = РеквизитФормыВЗначение("Объект");
	Если  глВыгрузкаДанных.ВыгрузитьОбк(Новый Структура("ВидСпр","Номенклатура"),Соединение,Обк,1) Тогда
		//Обк.ОбменДанными.Загрузка = истина;
		//Обк.Записать();
		Возврат ИстинА;
	ИНаче
		Возврат Ложь;
	КонецЕСЛИ;
	
		
КонецФункции

&НаКлиенте
Процедура ЗаписатьОнЛайн(Команда)
	
	Если глДоступ.ДоступНоменклатура()=Ложь Тогда
		Возврат;
	КонецЕСЛИ;
	
	Если ЗаписатьОнЛайнНаСервере() Тогда
		ЭтаФорма.Прочитать();
		ЭтаФорма.Модифицированность = Ложь;
		ОповеститьОбИзменении(Объект.Ссылка);
		ЭтаФорма.Закрыть();
	КонецЕСЛИ;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если  МожноРедактироватьОффЛайн()=Ложь Тогда
		отказ = Истина;
		Сообщить("Можно записать только через кнопку <Запись ОнЛайн>");
	КонецЕСЛИ;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки(Команда=Неопределено)
	
	ссНом = объект.Ссылка;
	Если ЗначениеЗаполнено(ссНом)=Ложь или ЭтаФорма.Модифицированность=Истина Тогда 
		Сообщить("Объект не записан!");
		Возврат; 
	КонецЕСЛИ;
	
	Если Команда.имя = "ПечатьЭтикеткиСУказаниемПринтера" Тогда
		глОбщийКлиент.ПечатьЭтикетки(ссНом,Истина);
	ИНаче
		глОбщийКлиент.ПечатьЭтикетки(ссНом);
	КонецЕСЛИ;

КонецПроцедуры


&НаКлиенте
Процедура СделатьФото(Команда)
	
	
	Стк = новый Структура("ном,надоФото",Объект.Ссылка,истина);
	ОткрытьФорму("Обработка.СписокЗапросовНаНовуюНоменклатуру.Форма.ФормаПлз", Стк);
КонецПроцедуры

&НаКлиенте
Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	// строка соединения и путь на сервере
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	// информация пользователя и имя сервера
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции


&НаКлиенте
Функция ПОлучитьФотоССервера(ПолныйАдресРесурса)
	
	//ПолныйАдресРесурса = "https://azureuttdiag.blob.core.windows.net/nomen/foto/ft23772_c09345e2-dc9f-2b43-e0d6-53377ba4a1ac.jpeg";
	СтруктураURI = СтруктураURI(ПолныйАдресРесурса); 
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт); 
	 
	HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере); 
	Результат =  HTTPСоединение.Получить(HTTPЗапрос);
	
	
	Если Результат.КодСостояния = 200 Тогда
		Возврат Результат.ПолучитьТелоКакДвоичныеДанные()
	ИНаче
		Возврат Неопределено;
	КонецесЛИ;
	 
КонецФункции


&НаКлиенте
Процедура грпСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница=Элементы.стрФото и ЕстьФото=Ложь Тогда
		
		Бин = ПОлучитьФотоССервера(Объект.АдресФото); 
		Если Бин=Неопределено Тогда 
			Возврат; 
		КонецЕСли;
		фотоБин = ПоместитьВоВременноеХранилище(Бин);
		ЕстьФото=Истина;
		
	КонецеслИ;
	
КонецПроцедуры

