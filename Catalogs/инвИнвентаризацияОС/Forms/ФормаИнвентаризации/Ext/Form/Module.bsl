
&НаКлиенте
Процедура СканироватьШтрихКод(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		Опопвещение = Новый ОписаниеОповещения("ЗавершениеСканирования",ЭтотОбъект);
		СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Сканирование штрих-кода",Опопвещение);
		
		//бин = СредстваМультимедиа.СделатьФотоснимок(ТипКамерыУстройства.Задняя);
		//Сообщить(Бин.ТипСодержимого);
	#КонецЕсли
	
КонецПроцедуры


&НаКлиенте
Процедура ЗавершениеСканирования(ШтрихКод,Результат,Сообщение,ДопПар ) Экспорт
	
	#Если МобильноеПриложениеКлиент Тогда
		СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
	#КонецЕсли
	
	ДобавитьИнвОСКлиент(ШтрихКод);
	
	//Если Лев(ШтрихКод,3) <> "!!!" Тогда
	//	#Если МобильноеПриложениеКлиент Тогда
	//		СредстваМультимедиа.ВоспроизвестиТекст("Это не штрих-код основного средства!"); 
	//	#КонецЕсли
	//	возврат;
	//КонецЕсли;
		
	
КонецПроцедуры
	
&НаКлиенте
Процедура ДобавитьИнвОСКлиент(ШтрихКод)
	Рез = ДобавитьИнвОС(ШтрихКод,ИмяУстройства);	
	
	Если Рез = Истина Тогда
		Сигнал();
		Элементы.Список.Обновить();
	ИНаче
		#Если МобильноеПриложениеКлиент Тогда
			СредстваМультимедиа.ВоспроизвестиТекст(Рез); 
		#КонецЕсли
	КонецЕсли;
КонецПроцедуры
	

&НаСервереБезКонтекста
Функция ДобавитьИнвОС(ШтрихКод,ИмяУстройства)
	
	ид = СтрЗаменить(ШтрихКод,"!","");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инвИнвентаризацияОС.ОсновноеСредство КАК ОсновноеСредство,
	               |	инвИнвентаризацияОС.ИнвНомер КАК ИнвНомер
	               |ИЗ
	               |	Справочник.инвИнвентаризацияОС КАК инвИнвентаризацияОС
	               |ГДЕ
	               |	инвИнвентаризацияОС.ОсновноеСредствоGUID = &ОсновноеСредствоGUID";
	Запрос.УстановитьПараметр("ОсновноеСредствоGUID",ид);
	
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Следующий() ТОгда
		Возврат "Уже есть "+Выб.ОсновноеСредство+" инв.№ "+Выб.ИНВНомер;
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОстаткиОС.ОсновноеСредствоGUID КАК ОсновноеСредствоGUID,
	               |	ОстаткиОС.ОсновноеСредство КАК ОсновноеСредство,
	               |	ОстаткиОС.МОЛ КАК МОЛ,
	               |	ОстаткиОС.Подразделение КАК Подразделение,
	               |	ОстаткиОС.ИнвНомер КАК ИнвНомер
	               |ИЗ
	               |	РегистрСведений.ОстаткиОС КАК ОстаткиОС
	               |ГДЕ
	               |	ОстаткиОС.ОсновноеСредствоGUID = &ОсновноеСредствоGUID";
	
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда
		Обк = Справочники.инвИнвентаризацияОС.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(Обк,Выб);
		Обк.Дата = ТекущаяДата();
		Обк.Лог = ИмяУстройства;
		
		Обк.записать();
		Возврат Истина;
	КонецЕсли;
	
	Возврат "нет на остатке такого основного средства";

		
КонецФункции

&НаСервереБезКонтекста
Процедура ОбновитьОстаткиНаСервере()
	глОбщий.ЗагрузитьОстаткиОСНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстатки(Команда)
	ОбновитьОстаткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИмяУстройства = глДоступ.ПолучитьНаименованиеУстройства();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОС(Команда)
	ОткрытьФорму("РегистрСведений.ОстаткиОС.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗаписи(Команда)
	// Вставить содержимое обработчика.
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос",ЭтотОбъект); // Прописываем название процедуры-обработчика.
	
	
	
	ПоказатьВопрос(Оповещение, "Очистить все записи инвентаризации?",  // вместо привычного "Вопрос", теперь "ПоказатьВопрос"
	
	РежимДиалогаВопрос.ДаНет,
	
	0,  // задержка (секунды). необязательно
	
	КодВозвратаДиалога.Да, // задает кнопку по умолчанию. необязательно
	
	"" // устанавливаем заголовок. необязательно
	
);
КонецПроцедуры


&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт 
	
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОчиститьЗаписиИнвентаризации();
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ОчиститьЗаписиИнвентаризации()
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	инвИнвентаризацияОС.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.инвИнвентаризацияОС КАК инвИнвентаризацияОС";
	
	Выб = Запрос.Выполнить().Выбрать();
	Пока Выб.Следующий() Цикл
		Выб.ссылка.ПолучитьОбъект().Удалить();
	КонецЦиклА;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ФокусНаПодбор();
	#Если МобильноеПриложениеКлиент Тогда
		ПодключитьОбработчикОжидания("ФокусНаПодбор",3,Ложь);
	#КонецЕсли
	
	СекундВПолеМесто = 0;

КонецПроцедуры

&НаКлиенте
Процедура ФокусНаПодбор()
	
	Если ТипЗнч(ЭтаФорма.ТекущийЭлемент)=Тип("ПолеФормы") Тогда
		
		Если ЭтаФорма.ТекущийЭлемент.Имя = "СтрокаПодбора" Тогда
			ЭтаФорма.НачатьРедактированиеЭлемента();
			Возврат;
		КонецЕСЛИ;
		
	КонецЕСЛИ;
	
	ЭтаФорма.ТекущийЭлемент = элементы.СтрокаПодбора;
	ЭтаФорма.НачатьРедактированиеЭлемента();
	
КонецПроцедуры


&НаКлиенте
Процедура СтрокаПодбораОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	ШтрихКод = СтрЗаменить(Текст,"!","");
	Текст="";
	СтрокаПодбора = "";
	ЭтаФорма.ТекущийЭлемент = элементы.СтрокаПодбора;
	ЭтаФорма.НачатьРедактированиеЭлемента();
	
	Если СтрДлина(ШтрихКод)=36 Тогда
		ДобавитьИнвОСКлиент(ШтрихКод);
	КонецеСЛИ;
	

		
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ВыгрузитьНаСервере()
	глВыгрузкаДанных.ВыгрузитьЗаписиИнвентаризацииОС();
КонецПроцедуры


&НаКлиенте
Процедура Выгрузить(Команда)
	ВыгрузитьНаСервере();
КонецПроцедуры

