
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Склад = глДоступ.ПолучитьОсновнойСклад();

	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ DISTINCT
	               |	Остатки.Склад КАК Склад
	               |ИЗ
	               |	РегистрСведений.Остатки КАК Остатки
				   |
				   |WHERE Склад <> Значение(Справочник.Склады.ПустаяСсылка)
				   |";
	Тбл = Запрос.Выполнить().Выгрузить();
	Если ТБл.Количество()<>0 Тогда
		Если ЗначениеЗаполнено(Склад)=Ложь Тогда
			Склад = тбл[0].Склад;
		КонецЕСЛИ;
		Элементы.Склад.СписокВыбора.ЗагрузитьЗначения(тбл.ВыгрузитьКолонку("Склад")); 
	КонецеСЛИ;
	
	СкладПриИзмененииНасервере();	
	
КонецПроцедуры


&НаСервере
Процедура УстФильтрСклад()
	эл = Список.Параметры.Элементы.Найти("Склад");
	Эл.Значение = Склад;
	Эл.Использование = Истина;
	
	эл = Список.Параметры.Элементы.Найти("ДатаСинхронизации");
	Эл.Значение = ДатаСинхронизации;
	Эл.Использование = Истина;
	
	эл = Список.Параметры.Элементы.Найти("Дата");
	Эл.Значение = ДатаЗакрытияДвж;
	Эл.Использование = Истина;
	
	эл = Список.Параметры.Элементы.Найти("ПоМЕстам");
	Эл.Значение = ПоМЕстам;
	Эл.Использование = Истина;
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииНасервере()
	Стк = РегистрыСведений.СинхроДвж.ПоследняяВыгрузкаНаСервер(Склад);
	ДатаЗакрытияДвж = Стк.Дата;
	ДатаСинхронизации = Стк.ДатаСинхронизации;
	ЭтаФорма.Заголовок = "Остатки";
	УстФильтрСклад();	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	УстФильтрСклад()
КонецПроцедуры


//=============================
#Область ПечатьЭтикеток

&НаКлиенте
Процедура ПечатьВсехЭтикеток(Команда)
	ПечатьЭтикетки();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки(УказатьАдресПрнтера=Ложь) экспорт
	
	Если ЗначениеЗаполнено(Склад) = Ложь ТОгда
		Сообщить("не выбран Склад!");
		Возврат;
	КонецеСЛИ;
	
	АдресПринтера = глОбщий.АдресПринтера();
	
	Если ЗначениеЗаполнено(АдресПринтера) = Ложь or УказатьАдресПрнтера Тогда
		Стр = "";
		ООП = новый ОписаниеОповещения("ОкончаниеВводаСтроки",глОбщийКлиент.ЭтотОбъект);
		ПоказатьВводСтроки(ООП,Стр,"Введите IP адрес принтера",,Ложь);
		ВозвраТ;
	КонецЕСЛИ;
	
	
	оо = Новый ОписаниеОповещения("оо_ответНаВопрос",ЭтотОбъект);
	ПоказатьВопрос(оо,"Распечатать этикетки для всей номенклатуры?",РежимДиалогаВопрос.ДаНет);
	
		
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВводаСтроки(Стр,ДопПар) Экспорт
	
	Если Стр = Неопределено Тогда ВозвраТ; КонецЕСЛИ;
	глОбщий.АдресПринтера(Стр);	
	ПечатьЭтикетки(ДопПар);
	
КонецПроцедуры

&НаКлиенте
Процедура  оо_ответНаВопрос(Рез,Параметры) Экспорт
	Если Рез = Неопределено ТОгда Возврат; КонецЕСЛИ;
	Если Рез <> КодВозвратаДиалога.Да Тогда Возврат; КонецеСЛИ;
	
	ПечатьZPL(Склад);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПечатьZPL(Склад) Экспорт
	
	текОрг = Склад.Организация;
	Если ЗначениеЗаполнено(ТекОрг)=Ложь Тогда
		Сообщить("Ошибка определения организации по складу!");
		Возврат;
	КонецеСЛИ;
	стрАПИ = "/"+текОрг.APIrest+"/hs/invAPI/OSTZEBRA";
	
	СткСоединение = глОбщий.СткПолучитьСоединение(текОрг);
	
	Соединение = Новый HTTPСоединение(
	СткСоединение.Сервер, // сервер (хост)
	СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
	СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
	СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
	, // здесь указывается прокси, если он есть
	, // таймаут в секундах, 0 или пусто - не устанавливать
	// защищенное соединение, если используется https
	);
	
	
	СткПар = Новый Структура;
	СткПар.Вставить("КодСкл",Склад.Код);
	СткПар.Вставить("IP",глОбщий.АдресПринтера());
	хр = Новый ХранилищеЗначения(сткПар, Новый СжатиеДанных(3));
	
	
	Запрос = Новый HTTPЗапрос(стрАПИ);
	Запрос.УстановитьТелоИзСтроки(XMLСтрока(хр));
	
	Результат = Соединение.ОтправитьДляОбработки(Запрос);
	Если Результат.КодСостояния <> 200 Тогда 
		Сообщить(результат.ПолучитьТелоКакСтроку());
		Сообщить("Ошибка печати этикетки: код "+Результат.КодСостояния);
	ИНаче
		Сообщить(результат.ПолучитьТелоКакСтроку());
	КонецЕСЛИ;
	
	
	
		
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки1(Команда)
	Если ТипЗнч(Элементы.Древо.ТекущиеДанные.Номенклатура)<>Тип("СправочникСсылка.Номенклатура") ТОгда Возврат; КонецЕСЛИ;
	глОбщийКлиент.ПечатьЭтикетки(Элементы.Древо.ТекущиеДанные.Номенклатура);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДвижениеНаСервере(Склад,Ном)
	
	текОрг = Склад.Организация;	
	
	СткСоединение = глОбщий.СткПолучитьСоединение(текОрг);
	Соединение = Новый HTTPСоединение(
	СткСоединение.Сервер, // сервер (хост)
	СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
	СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
	СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
	, // здесь указывается прокси, если он есть
	, // таймаут в секундах, 0 или пусто - не устанавливать
	// защищенное соединение, если используется https
	);
	
	
	сткПар = новый Структура("идСкл,идНом",СокрлП(Склад.УникальныйИдентификатор()),СокрлП(Ном.УникальныйИдентификатор()));
	хр = Новый ХранилищеЗначения(сткПар, Новый СжатиеДанных(3));
	
	
	стрАПИ = "/"+текОрг.APIrest+"/hs/invAPI/DVGTMC";
	Запрос = Новый HTTPЗапрос(стрАПИ);
	Запрос.УстановитьТелоИзСтроки(XMLСтрока(хр));
	
	
	Результат = Соединение.ОтправитьДляОбработки(Запрос);
	Если Результат.КодСостояния <> 200 Тогда 
		Сообщить(результат.ПолучитьТелоКакСтроку());
		Сообщить("Ошибка печати этикетки: код "+Результат.КодСостояния);
		Возврат Неопределено;
	КонецЕСЛИ;
	
	
	Таб = XMLзначение(Тип("ХранилищеЗначения"),результат.ПолучитьТелоКакСтроку()).Получить();
	Если ТипЗнч(Таб) <> Тип("ТабличныйДокумент") ТОгда
		Сообщить("Неверный тип при ответе");
		Возврат Неопределено;
	КонецЕСлИ;
	
	//Таб = Новый ТабличныйДокумент;
	Таб.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
	Таб.АвтоМасштаб = Истина;
	
	Возврат Таб;
	
	
	
КонецФункции

&НаКлиенте
Процедура Движение(Команда)
	
	Таб = ДвижениеНаСервере(Склад,Элементы.список.ТекущиеДанные.Номенклатура);
	
	
	Если Таб<>Неопределено Тогда
		ИмяФайла = ПолучитьИмяВременногоФайла("pdf");
		Таб.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.PDF);
		ЗапуститьПриложение(ИмяФайла);	
	КонецеСЛИ;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистр(Команда)
	ОткрытьФорму("РегистрСведений.Остатки.Форма.ФормаСписка2",,ЭтаФорма,ЭтаФорма);
КонецПроцедуры

#КонецОбласти
