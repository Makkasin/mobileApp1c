&НаСервере
Функция ОтправитьНаСервере()
	
	
	
	СткСоединение = глОбщий.СткПолучитьСоединение();
	
	Соединение = Новый HTTPСоединение(
	СткСоединение.Сервер, // сервер (хост)
	СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
	СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
	СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
	, // здесь указывается прокси, если он есть
	, // таймаут в секундах, 0 или пусто - не устанавливать
	// защищенное соединение, если используется https
	);
	
	
	Стк = Новый Структура;
	Стк.Вставить("id1s" , ?(ПустаяСтрока(идЗапроса), Строка(Новый УникальныйИдентификатор()), СокрЛП(идЗапроса)));
	Стк.Вставить("name" , СокрЛП(Наименование));
	Стк.Вставить("edizm", СокрЛП(ЕдИзм));
	Стк.Вставить("user",СокрЛП(глДоступ.ПолучитьНаименованиеУстройства()));
	Стк.Вставить("inn",СокрЛП(Константы.Склад.Получить().Организация.Код));
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		стк.Вставить("idnom", СокрЛП(Номенклатура.УникальныйИдентификатор()));
	КонецЕсли;
	
	Если СокрЛП(фотоБин)<>"" ТОгда
		Стк.Вставить("фото",ПолучитьИзВременногоХранилища(фотоБин));
	КонецеСЛИ;
	
	тело =	XMLстрока(Новый ХранилищеЗначения(Стк, Новый СжатиеДанных(5)));

	
	HTTPЗапрос = Новый HTTPЗапрос("/Urals_BUH/hs/invAPI/NEWNOM");
	
	HTTPЗапрос.УстановитьТелоИзСтроки(тело);
	
	HTTPОтвет = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	
	Возврат HTTPОтвет.КодСостояния
	
КонецФункции

&НаКлиенте
Процедура ОтправитьЗапрос(Команда)
	
	Если СокрлП(Наименование)="" ТОгда
		Сообщить("Не указано наименование!");
		Возврат;
	КонецеСЛИ;
	Если СокрлП(ЕдИзм)="" ТОгда
		Сообщить("Не указана единица измерения!");
		Возврат;
	КонецеСЛИ;

	
	HTTPОтветКодСостояния = ОтправитьНаСервере();
	Если HTTPОтветКодСостояния <> 200 Тогда 
		Сообщить("Ошибка синхронизации: код "+HTTPОтветКодСостояния);
		//Сообщить(HTTPОтвет.ПолучитьТелоКакСтроку());
	Иначе
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Наименование") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,КлючНазначенияИспользования,ТолькоПросмотр");
	ИНачеЕсли  Параметры.Свойство("надоФото") Тогда
		Номенклатура = Параметры.ном;
		Наименование = СокрлП(Номенклатура.наименование);
		Код = СокрлП(Номенклатура.Код);
		ЕдИзм = СокрлП(Номенклатура.ЕдИзм);
		надоФото = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Вставить содержимое обработчика
	Мас = ДанныеЕдИзм();
	Если СокрЛП(ЕдИзм)<>"" Тогда
		Если Мас.Найти(СокрЛП(ЕдИзм))=Неопределено Тогда
			Мас.добавить(СокрЛП(ЕдИзм));
		КонецеслИ;
	ИНаче
		 ЕдИзм = "шт.";
	КонецЕСЛИ;
	Элементы.ЕдИзм.СписокВыбора.ЗагрузитьЗначения(Мас);
	
	Если НадоФото Тогда
		Фото(Неопределено);
	ИНачеЕсли ЕстьФото Тогда
		Элементы.Фото.Заголовок = "Показать фото";
	КонецЕСлИ;
	
	Если СокрЛП(идЗапроса)<>""  Тогда
		Для каждого эл из Элементы Цикл
			Если Эл.Вид=ВидПоляФормы.ПолеВвода 
				или (Эл.вид = ВидКнопкиФормы.ОбычнаяКнопка и Эл.имя<>"Фото") Тогда
				Эл.Доступность = ложь;
			КонецесЛИ;
			//Сообщить(""+Эл.имя+" - "+Эл.Вид+" "+ТипЗнч(Эл.вид));
				
		КонецЦикла;
	КонецеСЛИ;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеЕдИзм()
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ DISTINCT
	               |	Номенклатура.ЕдИзм КАК ЕдИзм
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура";
	ТБл =Запрос.Выполнить().Выгрузить();
	Возврат Тбл.ВыгрузитьКолонку("ЕдИзм");
	
	
КонецФункции

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	Если СокрлП(Наименование)="" ТОгда
		Наименование = СокрлП(Номенклатура);
	КонецеСЛИ;
КонецПроцедуры

&НаКлиенте
Функция ПОлучитьФотоССервера()
	
	СткСоединение = глОбщий.СткПолучитьСоединение();
	
	Соединение = Новый HTTPСоединение(
	СткСоединение.Сервер, // сервер (хост)
	СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
	СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
	СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
	, // здесь указывается прокси, если он есть
	, // таймаут в секундах, 0 или пусто - не устанавливать
	// защищенное соединение, если используется https
	);
	
	HTTPЗапрос = Новый HTTPЗапрос("/Urals_BUH/hs/invAPI/LISTREQFOTO");
	

	HTTPЗапрос.УстановитьТелоИзСтроки(СокрЛП(идЗапроса));
	
	HTTPОтвет = Соединение.POST(HTTPЗапрос);
	
	Если HTTPОтвет.КодСостояния<>200 ТОгда
		Сообщить(HTTPОтвет.КодСостояния);
		Сообщить(HTTPОтвет.ПолучитьТелоКакСтроку());
		Возврат Неопределено ;
	КонецЕСли;
	
	Возврат HTTPОтвет.ПолучитьТелоКакДвоичныеДанные();
	
КонецФункции

&НаКлиенте
Процедура Фото(Команда)
	Данные = Неопределено;
	
	Если ЕстьФото Тогда
		Бин = ПОлучитьФотоССервера(); 
		Если Бин=Неопределено Тогда 
			Возврат; 
		КонецЕСли;
	ИНаче
	#Если МобильноеПриложениеКлиент Тогда 
		Данные = СредстваМультимедиа.СделатьФотоснимок(ТипКамерыУстройства.Задняя); 
		Если Данные=Неопределено Тогда 
			Возврат; 
		КонецЕСли;
		Бин = Данные.ПолучитьДвоичныеДанные();
	#Иначе
		Бин = Новый ДвоичныеДанные("C:\Users\AdminAzure\Pictures\2.jpeg");
	#КонецЕсли
	КонецЕСли;
	
	
	фотоБин = ПоместитьВоВременноеХранилище(Бин);
	Элементы.фотоБин.Видимость = Истина;
	
	
КонецПроцедуры
