
&НаКлиенте
Процедура ПосмотретьОстатки(Команда)
	ПолучитьФорму("РегистрСведений.Остатки.Форма.ФормаСписка").Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОстатки(Команда)
	глОбщий.ЗагрузитьОстаткиНаСервере();
	ОбновитьДтСинхро();
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура(Команда)
	ПолучитьФорму("Справочник.Номенклатура.ФормаСписка").Открыть();
	ОбновитьДтСинхро();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьДтСинхро();
	ПриОткрытииНаСервере();
	ПодключитьОбработчикОжидания("Синхро",900,Ложь);
	
	ОбновитьСтруктураДанныхКлиента();
	#Если МобильноеПриложениеКлиент Тогда
		глФоновыеЗадания.PUSHВФоне();
	#КонецЕсли
	Видимость();
	
КонецПроцедуры

&НаКлиенте
Процедура Развернуть(пГруппа2)
	пГруппа2.Группировка=ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;	
	пГруппа2.Ширина = 0;
	Для каждого Эл из пГруппа2.ПодчиненныеЭлементы Цикл
		Эл.Ширина = 0;
	конеццикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СкладВыдачаЧерезСогласование(ссСклад)
	Если ЗначениеЗаполнено(ссСклад) Тогда
		Возврат ссСклад.ВыдчаТМЦчерезСогласование;
	ИНАче
		Возврат Ложь;
	КонецЕСЛИ;
	
КонецФункции

&НаКлиенте
Процедура Видимость()
	
	//Элементы.ЗапросыНаНовуюНоменклатуру.Видимость = глДоступ.ДоступЗапросыНаНовуюНоменклатуру();
	Элементы.СогласованиеВыдачаТМЦ.Видимость      = глДоступ.ДоступСогласованиеВыдачиТМЦ();
	Элементы.ЗапросыНаВыдачуТМЦ.Видимость 		  = СкладВыдачаЧерезСогласование(Склад);
	
	Элементы.СменаМеста.Видимость = глДоступ.ДоступДвиженияПоСкладу();
	Элементы.Пересорт.Видимость   = глДоступ.ДоступДвиженияПоСкладу();
	Элементы.Документы.Видимость  = глДоступ.ДоступДвиженияПоСкладу();
	
	Элементы.РасходТМЦ.Видимость  = глДоступ.ДоступВыдачаТМЦнаТС();
	Элементы.ВыдачаМасла.Видимость= глДоступ.ДоступВыдачаТМЦнаТС();
	
КонецПроцедуры

&Насервере
Процедура ПриОткрытииНаСервере()

	Склад = глДоступ.ПолучитьОсновнойСклад();
КонецПроцедуры

&НаКлиенте
Процедура  ОбновитьДтСинхро()
	
	Стк = глОбщий.ОбновитьДтСинхроНасервере();
	Элементы.ЗагрузитьОстатки.Заголовок = "Загрузить остатки "+Символы.ПС+Стк.Остатки;
	Элементы.Номенклатура.Заголовок = "Номенклатура "+Символы.ПС+Стк.Номенклатура;
	Элементы.РасходТМЦ.Заголовок = "Расход ТМЦ "+Символы.ПС+Формат(глОбщий.ПоследнийНезакратыйДень(),"ДФ=dd.MM.yyyy");
	
	
КонецПроцедуры


&НаКлиенте
Процедура КонстантыСкладПриИзменении(Элемент=Неопределено)
	глДоступ.УстановитьОсновнойСклад(ЭтаФорма.Склад);
	Видимость();
КонецПроцедуры


&НаКлиенте
Процедура Команда1(Команда)
	
#Если МобильноеПриложениеКлиент Тогда
	Опопвещение = Новый ОписаниеОповещения("ЗавершениеСканирования",ЭтотОбъект);
	СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Сканирование штрих-кода",Опопвещение);
	
	//бин = СредстваМультимедиа.СделатьФотоснимок(ТипКамерыУстройства.Задняя);
	//Сообщить(Бин.ТипСодержимого);
#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеСканирования(ШтрихКод,Результат,Сообщение ) Экспорт
	
	Сообщить(ШтрихКод);
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьДанные(Команда)
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросВыгрузка",ЭтотОбъект); // Прописываем название процедуры-обработчика.
	
	ПоказатьВопрос(Оповещение, "Выгрузить данные на сервер?",  // вместо привычного "Вопрос", теперь "ПоказатьВопрос"
	
	РежимДиалогаВопрос.ДаНет,
	
	0,  // задержка (секунды). необязательно
	
	КодВозвратаДиалога.Да, // задает кнопку по умолчанию. необязательно
	
	"" // устанавливаем заголовок. необязательно
	
);
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеОтветаНаВопросВыгрузка(Результат, Параметры) Экспорт 
	
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОбновитьНастройки();
		глВыгрузкаДанных.Обмен(3600*24*2);
		ПриОткрытииНаСервере();
		Видимость();
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Документы(Команда)
	ПолучитьФорму("Документ.НакладнаяРасходная.ФормаСписка").Открыть();
КонецПроцедуры

&НаКлиенте
Процедура Синхро()
	
	глФоновыеЗадания.ОбменВФоне();
	ПриОткрытииНаСервере();
	
	
 КонецПроцедуры

&НаКлиенте
 Процедура ПроверкаШК(Команда)
	ПолучитьФорму("Обработка.ПроверкаНоменклатуры.Форма.Форма").Открыть();
 КонецПроцедуры

&НаКлиенте
 Процедура ЗапросыНаНовуюНоменклатуру(Команда)
	ПолучитьФорму("Обработка.СписокЗапросовНаНовуюНоменклатуру.Форма.ФормаСпискаЗапросовУпр").Открыть();
 КонецПроцедуры

&НаКлиенте
Процедура РасходТМЦ(Команда)
	Если глДоступ.СписыватьЧерезДокумент() = Истина Тогда
		ПолучитьФорму("Документ.ВыдачаТМЦ.ФормаСписка").открыть();
	ИНаче
		ПолучитьФорму("Обработка.ДвжТМЦ.Форма.Форма").Открыть();
	КонецеСЛИ;
 КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьДтСинхро" Тогда
		ОбновитьДтСинхро();
	КонецЕСЛИ;
 КонецПроцедуры

&НаСервере
 Процедура PUSHНаСервере()
	текОрг = глДоступ.ПолучитьОсновнойСклад().Организация; 
	Сообщить(текОрг);
	Сообщить(текОрг.ВнутреннийАдрес);
	 
 КонецПроцедуры

 &НаКлиенте
Функция ПолучитьIDУстройства() Экспорт

	IDУстройства = Неопределено;
	
	#Если МобильноеПриложениеКлиент Тогда
		ЗапускПриложения = Новый ЗапускПриложенияМобильногоУстройства();
		//Если ЗапускПриложения.ПоддерживаетсяЗапуск() Тогда
			ЗапускПриложения.Действие = "com.android.tinydeviceid.action.getDeviceID";
			ЗапускПриложения.Запустить(Истина);
			Сообщить(11);
			Для Каждого КлючЗначение Из ЗапускПриложения.ДополнительныеДанные Цикл
				Сообщить(""+КлючЗначение.Ключ+" - "+КлючЗначение.Значение);
				Если КлючЗначение.Ключ = "DeviceID" Тогда
					IDУстройства = КлючЗначение.Значение;
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			
		//КонецЕсли;
	#КонецЕсли
	
	Сообщить(IDУстройства);

КонецФункции // ПолучитьIDУстройства()

&НаКлиенте
Процедура PUSH(Команда)
	
	ПолучитьIDУстройства();	
	Возврат;
	
	
	МасП = НайтиФайлы(
	"/data/data/com.e1c.mobile/files/", 
	"*.1CD", 
	Истина    
	);	
	
	Для каждого Эл из масП Цикл
		Сообщить(""+эл.полноеИмя+" Размер: "+эл.размер());	
	КонецЦикла;
	
	ф1 = масП[0].полноеИмя;
	
	п = Найти(ф1,"files")-1;
	
	ф2 = Лев(ф1,п)+"files/backup/1cv8copy.1cd";
	//КопироватьФайл(
	//        ф1,
	//        ф2
	//    );
	
	
	
	
	Возврат;
	
	 PUSHНаСервере();  	 
	 
	 
 КонецПроцедуры

&НаКлиенте
 Процедура СписокТС(Команда)
	ПолучитьФорму("Обработка.СписокТС.Форма.Форма").Открыть();
	//ПолучитьФорму("Документ.ро_Отгрузка.ФормаСписка").Открыть();
 КонецПроцедуры

&НаКлиенте
 Процедура ВыдачаМасла(Команда)
	ПолучитьФорму("Обработка.ДвжТМЦ.Форма.ФормаМасло").Открыть();
 КонецПроцедуры

&НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 
 КонецПроцедуры

&НаКлиенте
 Процедура Пересорт(Команда)
	ПолучитьФорму("Справочник.двжПересорт.Форма.ФормаСписка",,,ЭтаФорма).Открыть();
 КонецПроцедуры

&НаКлиенте
 Процедура СканироватьСклад(Команда)
	#Если МобильноеПриложениеКлиент Тогда
		Опопвещение = Новый ОписаниеОповещения("ЗавершениеСканированияКод",ЭтотОбъект);
		СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Сканирование штрих-кода",Опопвещение);
		
		//бин = СредстваМультимедиа.СделатьФотоснимок(ТипКамерыУстройства.Задняя);
		//Сообщить(Бин.ТипСодержимого);
	#КонецЕсли
 КонецПроцедуры
 
&НаКлиенте
Процедура ЗавершениеСканированияКод(ШтрихКод,Результат,Сообщение,ДопПар ) Экспорт
	
	#Если МобильноеПриложениеКлиент Тогда
		СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
	#КонецЕсли
	
	Если Лев(ШтрихКод,4) <> "_!!_"  Тогда
		  Сообщить("Неправильный формат!");
		  Возврат;
	КонецЕСЛИ;
	
	пСтр =  Сред(ШтрихКод,5);
	сс = ПОлучитьСклПоГУИД(пСтр);
	ЕСли сс<>Неопределено ТОгда
		Склад = сс;
		КонстантыСкладПриИзменении();
		ЗагрузитьОстатки(Неопределено);
	КонецеСЛИ;

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПОлучитьСклПоГУИД(пСтр)
	
	сс = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(пСтр));
	Если глОбщий.СсылкаСуществует(сс,"Склады")=Ложь Тогда
		Сообщить("Обновите справочник складов!");
		Возврат Неопределено;
	КонецеСЛИ;
	
	Возврат сс;
	
	
КонецФункции

&НаКлиенте
Процедура СменаМеста(Команда)
	ПолучитьФорму("Справочник.двжПересорт.Форма.ФормаСписка1",,,ЭтаФорма).Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗапросыНаВыдачуТМЦ(Команда)
	ПолучитьФорму("Справочник.ЗаявкиНаВыдачуТМЦ.Форма.ФормаПодбора",,,ЭтаФорма).Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СогласованиеВыдачаТМЦ(Команда)
	ПолучитьФорму("Справочник.ЗаявкиНаВыдачуТМЦ.Форма.ФормаСогласование",,,ЭтаФорма).Открыть();
КонецПроцедуры

&НаКлиенте
Процедура  ОбновитьСтруктураДанныхКлиента()
	
	Стк = Новый Структура("ИдентификаторУстройства,Широта,Долгота,ДатаКоординат");
	#Если МобильноеПриложениеКлиент Тогда
		НомерПроекта =  "574573855985";
		Попытка   //Huawei отключили от сервисов Google
			IDПодписчика = ДоставляемыеУведомления.ПолучитьИдентификаторПодписчикаУведомлений(НомерПроекта);
			Стк.Вставить("ИдентификаторУстройства",IDПодписчика.ИдентификаторУстройства);
		исключение
			Стк.Вставить("ИдентификаторУстройства","");
		КонецПопытки;
	#КонецЕсли
	
	
	//Координаты
	#Если МобильноеПриложениеКлиент Тогда
		
		Если СредстваГеопозиционирования.ИспользованиеДанныхГеопозиционированияВключено() Тогда 
			Провайдер = СредстваГеопозиционирования.ПолучитьСамогоЭнергоЭкономичногоПровайдера();
			
			//Если СредстваГеопозиционирования.ОбновитьМестоположение(Провайдер.Имя, 60) Тогда
			ДанныеМестоположения = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(Провайдер.Имя);
			Если ДанныеМестоположения<>Неопределено Тогда
				Стк.Вставить("Широта",ДанныеМестоположения.Координаты.Широта);
				Стк.Вставить("Долгота",ДанныеМестоположения.Координаты.Долгота);
				Стк.Вставить("ДатаКоординат",ДанныеМестоположения.Дата);
			КонецЕСЛИ;
			//КонецЕсли;	
		КонецЕСЛИ;
	#КонецЕсли
	
	глДоступ.УстановитьСтруктураДанныхКлиента(Стк);
	
    ОбновитьЗаголовокФормы();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройки(Команда=Неопределено)
	ОбновитьСтруктураДанныхКлиента();
	глВыгрузкаДанных.ОтправитьНастройкуПланшетаНаСервере();
	Видимость();
КонецПроцедуры

&НаКлиенте
Процедура СканироватьQRСправки(Команда)
	ПолучитьФорму("Обработка.ВыборQRДокумента.Форма.Форма",,,ЭтаФорма).Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	ЭтаФорма.Заголовок = глДоступ.ПолучитьНаименованиеУстройства();
КонецПроцедуры
