
&НаКлиенте
Процедура ПосмотретьОстатки(Команда)
	ПолучитьФорму("РегистрСведений.Остатки.Форма.ФормаСписка").Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОстатки(Команда)
	глОбщий.ЗагрузитьОстаткиНаСервере();
	ОбновитьДтСинхро();
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура(Команда)
	ПолучитьФорму("Справочник.Номенклатура.ФормаСписка").Открыть();
	ОбновитьДтСинхро();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьДтСинхро();
	ПриОткрытииНаСервере();
	ПодключитьОбработчикОжидания("Синхро",300,Ложь);
	
	ОбновитьСтруктураДанныхКлиента();
	#Если МобильноеПриложениеКлиент Тогда
		глФоновыеЗадания.PUSHВФоне();
	#КонецЕсли
	Видимость();
	
КонецПроцедуры

&НаКлиенте
Процедура Развернуть(пГруппа2)
	пГруппа2.Группировка=ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;	
	пГруппа2.Ширина = 0;
	Для каждого Эл из пГруппа2.ПодчиненныеЭлементы Цикл
		Эл.Ширина = 0;
	конеццикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СкладВыдачаЧерезСогласование(ссСклад)
	Если ЗначениеЗаполнено(ссСклад) Тогда
		Возврат ссСклад.ВыдчаТМЦчерезСогласование;
	ИНАче
		Возврат Ложь;
	КонецЕСЛИ;
	
КонецФункции

&НаКлиенте
Процедура Видимость()
	
	Элементы.ЗапросыНаНовуюНоменклатуру.Видимость = глДоступ.ДоступЗапросыНаНовуюНоменклатуру();
	Элементы.СогласованиеВыдачаТМЦ.Видимость      = глДоступ.ДоступСогласованиеВыдачиТМЦ();
	Элементы.ЗапросыНаВыдачуТМЦ.Видимость 		  = СкладВыдачаЧерезСогласование(Склад);
	
	Элементы.СменаМеста.Видимость = глДоступ.ДоступДвиженияПоСкладу();
	Элементы.Пересорт.Видимость   = глДоступ.ДоступДвиженияПоСкладу();
	Элементы.Документы.Видимость  = глДоступ.ДоступДвиженияПоСкладу();
	
	Элементы.РасходТМЦ.Видимость  = глДоступ.ДоступВыдачаТМЦнаТС();
	Элементы.ВыдачаМасла.Видимость= глДоступ.ДоступВыдачаТМЦнаТС();
	
КонецПроцедуры

&Насервере
Процедура ПриОткрытииНаСервере()

	Склад = глДоступ.ПолучитьОсновнойСклад();
КонецПроцедуры

&НаКлиенте
Процедура  ОбновитьДтСинхро()
	
	Стк = глОбщий.ОбновитьДтСинхроНасервере();
	Элементы.ЗагрузитьОстатки.Заголовок = "Загрузить остатки "+Символы.ПС+Стк.Остатки;
	Элементы.Номенклатура.Заголовок = "Номенклатура "+Символы.ПС+Стк.Номенклатура;
	Элементы.РасходТМЦ.Заголовок = "Расход ТМЦ "+Символы.ПС+Формат(глОбщий.ПоследнийНезакратыйДень(),"ДФ=dd.MM.yyyy");
	
	
КонецПроцедуры


&НаКлиенте
Процедура КонстантыСкладПриИзменении(Элемент=Неопределено)
	глДоступ.УстановитьОсновнойСклад(ЭтаФорма.Склад);
	Видимость();
КонецПроцедуры


&НаКлиенте
Процедура Команда1(Команда)
	
#Если МобильноеПриложениеКлиент Тогда
	Опопвещение = Новый ОписаниеОповещения("ЗавершениеСканирования",ЭтотОбъект);
	СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Сканирование штрих-кода",Опопвещение);
	
	//бин = СредстваМультимедиа.СделатьФотоснимок(ТипКамерыУстройства.Задняя);
	//Сообщить(Бин.ТипСодержимого);
#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеСканирования(ШтрихКод,Результат,Сообщение ) Экспорт
	
	Сообщить(ШтрихКод);
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьДанные(Команда)
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросВыгрузка",ЭтотОбъект); // Прописываем название процедуры-обработчика.
	
	ПоказатьВопрос(Оповещение, "Выгрузить данные на сервер?",  // вместо привычного "Вопрос", теперь "ПоказатьВопрос"
	
	РежимДиалогаВопрос.ДаНет,
	
	0,  // задержка (секунды). необязательно
	
	КодВозвратаДиалога.Да, // задает кнопку по умолчанию. необязательно
	
	"" // устанавливаем заголовок. необязательно
	
);
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеОтветаНаВопросВыгрузка(Результат, Параметры) Экспорт 
	
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОбновитьНастройки();
		глВыгрузкаДанных.Обмен(3600*24*2);
		ПриОткрытииНаСервере();
		Видимость();
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Документы(Команда)
	ПолучитьФорму("Документ.НакладнаяРасходная.ФормаСписка").Открыть();
КонецПроцедуры

&НаКлиенте
Процедура Синхро()
	
	глФоновыеЗадания.ОбменВФоне();
	ПриОткрытииНаСервере();
	
	
 КонецПроцедуры

&НаКлиенте
 Процедура ПроверкаШК(Команда)
	ПолучитьФорму("Обработка.ПроверкаНоменклатуры.Форма.Форма").Открыть();
 КонецПроцедуры

&НаКлиенте
 Процедура ЗапросыНаНовуюНоменклатуру(Команда)
	ПолучитьФорму("Обработка.СписокЗапросовНаНовуюНоменклатуру.Форма.ФормаСпискаЗапросовУпр").Открыть();
 КонецПроцедуры

&НаКлиенте
 Процедура РасходТМЦ(Команда)
	ПолучитьФорму("Обработка.ДвжТМЦ.Форма.Форма").Открыть();
 КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьДтСинхро" Тогда
		ОбновитьДтСинхро();
	КонецЕСЛИ;
 КонецПроцедуры

&НаСервере
 Процедура PUSHНаСервере()
	текОрг = глДоступ.ПолучитьОсновнойСклад().Организация; 
	Сообщить(текОрг);
	Сообщить(текОрг.ВнутреннийАдрес);
	 
 КонецПроцедуры

&НаКлиенте
Процедура PUSH(Команда)
	
	
	
	Возврат;
	
	 PUSHНаСервере();  	 
	 
	 
	 Текст = " 	 
	 |^XA
	 |^LH10,15
	 |^CWT,E:TT0003M_.FNT
	 |^CFT,30,30
	 |^CI28
	 |^FT10,100^BCN,80,Y,N,N^FD!!6457       ^FS
	 |^FT10,150^FH^FDФильтр топливный FG110GW^FS
	 |^FT10,180^FH^FD, шт^FS
	 |^FT10,210^FH^FD^FS
	 |^XZ
	 |";	 
	 
	 Таб = Новый ТабличныйДокумент; 
	 Таб.Область(1,1,1,1).Текст = "^XA";
	 Таб.Область(2,1,2,1).Текст = "^LH10,15";
	 Таб.Область(3,1,3,1).Текст = "^CWT,E:TT0003M_.FNT";
	 Таб.Область(4,1,4,1).Текст = "^CFT,30,30";
	 Таб.Область(5,1,5,1).Текст = "^CI28";
	 Таб.Область(6,1,6,1).Текст = "^FT10,100^BCN,80,Y,N,N^FD!!6457       ^FS";
	 Таб.Область(7,1,7,1).Текст = "^FT10,150^FH^FDФильтр топливный FG110GW^FS";
	 Таб.Область(8,1,8,1).Текст = "^FT10,180^FH^FD, шт^FS";
	 Таб.Область(9,1,9,1).Текст = "^FT10,210^FH^FD^FS";
	 Таб.Область(10,1,10,1).Текст = "^XZ";
	 
	 
	 Таб.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	 
 КонецПроцедуры

&НаКлиенте
 Процедура СписокТС(Команда)
	ПолучитьФорму("Обработка.СписокТС.Форма.Форма").Открыть();
 КонецПроцедуры

&НаКлиенте
 Процедура ВыдачаМасла(Команда)
	ПолучитьФорму("Обработка.ДвжТМЦ.Форма.ФормаМасло").Открыть();
 КонецПроцедуры

&НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 //разные регламентные работы
 КонецПроцедуры

&НаКлиенте
 Процедура Пересорт(Команда)
	ПолучитьФорму("Справочник.двжПересорт.Форма.ФормаСписка",,,ЭтаФорма).Открыть();
 КонецПроцедуры

&НаКлиенте
 Процедура СканироватьСклад(Команда)
	#Если МобильноеПриложениеКлиент Тогда
		Опопвещение = Новый ОписаниеОповещения("ЗавершениеСканированияКод",ЭтотОбъект);
		СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Сканирование штрих-кода",Опопвещение);
		
		//бин = СредстваМультимедиа.СделатьФотоснимок(ТипКамерыУстройства.Задняя);
		//Сообщить(Бин.ТипСодержимого);
	#КонецЕсли
 КонецПроцедуры
 
&НаКлиенте
Процедура ЗавершениеСканированияКод(ШтрихКод,Результат,Сообщение,ДопПар ) Экспорт
	
	#Если МобильноеПриложениеКлиент Тогда
		СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
	#КонецЕсли
	
	Если Лев(ШтрихКод,4) <> "_!!_"  Тогда
		  Сообщить("Неправильный формат!");
		  Возврат;
	КонецЕСЛИ;
	
	пСтр =  Сред(ШтрихКод,5);
	сс = ПОлучитьСклПоГУИД(пСтр);
	ЕСли сс<>Неопределено ТОгда
		Склад = сс;
		КонстантыСкладПриИзменении();
		ЗагрузитьОстатки(Неопределено);
	КонецеСЛИ;

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПОлучитьСклПоГУИД(пСтр)
	
	сс = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(пСтр));
	Если глОбщий.СсылкаСуществует(сс,"Склады")=Ложь Тогда
		Сообщить("Обновите справочник складов!");
		Возврат Неопределено;
	КонецеСЛИ;
	
	Возврат сс;
	
	
КонецФункции

&НаКлиенте
Процедура СменаМеста(Команда)
	ПолучитьФорму("Справочник.двжПересорт.Форма.ФормаСписка1",,,ЭтаФорма).Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗапросыНаВыдачуТМЦ(Команда)
	ПолучитьФорму("Справочник.ЗаявкиНаВыдачуТМЦ.Форма.ФормаПодбора",,,ЭтаФорма).Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СогласованиеВыдачаТМЦ(Команда)
	ПолучитьФорму("Справочник.ЗаявкиНаВыдачуТМЦ.Форма.ФормаСогласование",,,ЭтаФорма).Открыть();
КонецПроцедуры

&НаКлиенте
Процедура  ОбновитьСтруктураДанныхКлиента()
	
	Стк = Новый Структура("ИдентификаторУстройства,Широта,Долгота,ДатаКоординат");
	#Если МобильноеПриложениеКлиент Тогда
		НомерПроекта =  "574573855985";
		IDПодписчика = ДоставляемыеУведомления.ПолучитьИдентификаторПодписчикаУведомлений(НомерПроекта);
		Стк.Вставить("ИдентификаторУстройства",IDПодписчика.ИдентификаторУстройства);
	#КонецЕсли
	
	
	//Координаты
	#Если МобильноеПриложениеКлиент Тогда
		
		Если СредстваГеопозиционирования.ИспользованиеДанныхГеопозиционированияВключено() Тогда 
			Провайдер = СредстваГеопозиционирования.ПолучитьСамогоЭнергоЭкономичногоПровайдера();
			
			//Если СредстваГеопозиционирования.ОбновитьМестоположение(Провайдер.Имя, 60) Тогда
			ДанныеМестоположения = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(Провайдер.Имя);
			Если ДанныеМестоположения<>Неопределено Тогда
				Стк.Вставить("Широта",ДанныеМестоположения.Координаты.Широта);
				Стк.Вставить("Долгота",ДанныеМестоположения.Координаты.Долгота);
				Стк.Вставить("ДатаКоординат",ДанныеМестоположения.Дата);
			КонецЕСЛИ;
			//КонецЕсли;	
		КонецЕСЛИ;
	#КонецЕсли
	
	глДоступ.УстановитьСтруктураДанныхКлиента(Стк);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройки(Команда=Неопределено)
	ОбновитьСтруктураДанныхКлиента();
	глВыгрузкаДанных.ОтправитьНастройкуПланшетаНаСервере();
	Видимость();
КонецПроцедуры

&НаКлиенте
Процедура СканироватьQRСправки(Команда)
	ПолучитьФорму("Обработка.ВыборQRДокумента.Форма.Форма",,,ЭтаФорма).Открыть();
КонецПроцедуры



