
&НаСервере
Процедура ОбновитьНаСервере(Фильтр="")
	
	тДрево = РеквизитФормыВЗначение("Древо");
	тДрево.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Остатки.Место КАК Место,
	               |	Остатки.Номенклатура.Код КАК Код,
	               |	Остатки.Номенклатура КАК Номенклатура,
	               |	Остатки.Партия КАК Партия,
	               |	Остатки.НачОст КАК НачОст,
	               |	Остатки.Прх КАК Прх,
	               |	Остатки.Рсх КАК Рсх,
	               |	Остатки.Количество КАК Количество
	               |ИЗ
	               |	РегистрСведений.Остатки КАК Остатки
	               |WHERE  (Остатки.Номенклатура.Наименование Подобно (&Фильтр) 
	               |  или  Остатки.Номенклатура.код Подобно (&Фильтр)
	               |  или  &БезФильтра = Истина
	               |   ) и Склад = &склад
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура.наименование
	               |ИТОГИ
	               |	СУММА(НачОст),
	               |	СУММА(Прх),
	               |	СУММА(Рсх),
	               |	СУММА(Количество)
	               |ПО
	               |	Номенклатура";
	
		Запрос.УстановитьПараметр("БезФильтра",Фильтр = "");
		Запрос.УстановитьПараметр("Фильтр","%"+Фильтр+"%");
		Запрос.УстановитьПараметр("Склад",Склад);
	
	
	Выб = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выб.Следующий() Цикл
		    Если Выб.Количество = 0 Тогда Продолжить; КонецЕсли;
			ТекСтроки = тДрево.строки.Добавить();
			ЗаполнитьЗначенияСвойств(ТекСтроки,Выб);
			
			пВыб = Выб.Выбрать();
			Пока пВыб.Следующий() Цикл
				Если пВыб.Количество = 0 Тогда Продолжить; КонецЕсли;
				новСтр = ТекСтроки.строки.Добавить();
				ЗаполнитьЗначенияСвойств(новСтр,пВыб,,"Номенклатура,Код");
				НовСтр.Номенклатура = пВыб.Партия;
				НовСтр.Код = пВыб.Место;
			Конеццикла;
			
		КонецЦикла;
	
	ЗначениеВРеквизитФормы(тДрево, "Древо");
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	СтрокаПоиска = "";
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
//	ОбновитьНаСервере(СокрЛП(Текст)); 
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	ОбновитьНаСервере(СокрЛП(СтрокаПоиска));
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Склад)=Ложь Тогда
		Склад = глДоступ.ПолучитьОсновнойСклад();
	КонецЕСЛИ;
	
	ОбновитьНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПечатьВсехЭтикеток(Команда)
	ПечатьЭтикетки();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки(УказатьАдресПрнтера=Ложь) экспорт
	
	Если ЗначениеЗаполнено(Склад) = Ложь ТОгда
		Сообщить("не выбран Склад!");
		Возврат;
	КонецеСЛИ;
	
	АдресПринтера = глОбщий.АдресПринтера();
	
	Если ЗначениеЗаполнено(АдресПринтера) = Ложь or УказатьАдресПрнтера Тогда
		Стр = "";
		ООП = новый ОписаниеОповещения("ОкончаниеВводаСтроки",глОбщийКлиент.ЭтотОбъект);
		ПоказатьВводСтроки(ООП,Стр,"Введите IP адрес принтера",,Ложь);
		ВозвраТ;
	КонецЕСЛИ;
	
	
	оо = Новый ОписаниеОповещения("оо_ответНаВопрос",ЭтотОбъект);
	ПоказатьВопрос(оо,"Распечатать этикетки для всей номенклатуры?",РежимДиалогаВопрос.ДаНет);
	
		
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВводаСтроки(Стр,ДопПар) Экспорт
	
	Если Стр = Неопределено Тогда ВозвраТ; КонецЕСЛИ;
	глОбщий.АдресПринтера(Стр);	
	ПечатьЭтикетки(ДопПар);
	
КонецПроцедуры

&НаКлиенте
Процедура  оо_ответНаВопрос(Рез,Параметры) Экспорт
	Если Рез = Неопределено ТОгда Возврат; КонецЕСЛИ;
	Если Рез <> КодВозвратаДиалога.Да Тогда Возврат; КонецеСЛИ;
	
	ПечатьZPL(Склад);
	
КонецПроцедуры



&НаСервереБезКонтекста
Процедура ПечатьZPL(Склад) Экспорт
	
	текОрг = Склад.Организация;
	Если ЗначениеЗаполнено(ТекОрг)=Ложь Тогда
		Сообщить("Ошибка определения организации по складу!");
		Возврат;
	КонецеСЛИ;
	стрАПИ = "/"+текОрг.APIrest+"/hs/invAPI/OSTZEBRA";
	
	СткСоединение = глОбщий.СткПолучитьСоединение(текОрг);
	
	Соединение = Новый HTTPСоединение(
	СткСоединение.Сервер, // сервер (хост)
	СткСоединение.Порт, // порт, по умолчанию для http используется 80, для https 443
	СткСоединение.Логин, // пользователь для доступа к серверу (если он есть)
	СткСоединение.Пароль, // пароль для доступа к серверу (если он есть)
	, // здесь указывается прокси, если он есть
	, // таймаут в секундах, 0 или пусто - не устанавливать
	// защищенное соединение, если используется https
	);
	
	
	СткПар = Новый Структура;
	СткПар.Вставить("КодСкл",Склад.Код);
	СткПар.Вставить("IP",глОбщий.АдресПринтера());
	хр = Новый ХранилищеЗначения(сткПар, Новый СжатиеДанных(3));
	
	
	Запрос = Новый HTTPЗапрос(стрАПИ);
	Запрос.УстановитьТелоИзСтроки(XMLСтрока(хр));
	
	Результат = Соединение.ОтправитьДляОбработки(Запрос);
	Если Результат.КодСостояния <> 200 Тогда 
		Сообщить(результат.ПолучитьТелоКакСтроку());
		Сообщить("Ошибка печати этикетки: код "+Результат.КодСостояния);
	ИНаче
		Сообщить(результат.ПолучитьТелоКакСтроку());
	КонецЕСЛИ;
	
	
	
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ DISTINCT
	               |	Остатки.Склад КАК Склад
	               |ИЗ
	               |	РегистрСведений.Остатки КАК Остатки
				   |
				   |WHERE Склад <> Значение(Справочник.Склады.ПустаяСсылка)
				   |";
	Тбл = Запрос.Выполнить().Выгрузить();
	Если ТБл.Количество()<>0 Тогда
	Склад = тбл[0].Склад;
	Элементы.Склад.СписокВыбора.ЗагрузитьЗначения(тбл.ВыгрузитьКолонку("Склад")); 
	КонецеСЛИ;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки1(Команда)
	Если ТипЗнч(Элементы.Древо.ТекущиеДанные.Номенклатура)<>Тип("СправочникСсылка.Номенклатура") ТОгда Возврат; КонецЕСЛИ;
	глОбщийКлиент.ПечатьЭтикетки(Элементы.Древо.ТекущиеДанные.Номенклатура);
КонецПроцедуры


